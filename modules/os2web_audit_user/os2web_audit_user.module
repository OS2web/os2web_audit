<?php

/**
 * @file
 * Audit log user CUD and login/logout events.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Session\AccountInterface;
use Drupal\user\UserInterface;

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function os2web_audit_user_user_insert(EntityInterface $entity): void {
  /** @var \Drupal\user\Entity\User $entity */
  $msg = sprintf('User created with rolles: %s', implode(', ', $entity->getRoles()));
  os2web_audit_user_log($msg, $entity->getEmail());
}

/**
 * Implements hook_ENTITY_TYPE_update().
 */
function os2web_audit_user_user_update(EntityInterface $entity): void {
  /** @var \Drupal\user\Entity\User $entity */
  $msg = sprintf('User updated with rolles: %s', implode(', ', $entity->getRoles()));
  os2web_audit_user_log($msg, $entity->getEmail());
}

/**
 * Implements hook_ENTITY_TYPE_delete().
 */
function os2web_audit_user_user_delete(EntityInterface $entity): void {
  /** @var \Drupal\user\Entity\User $entity */
  os2web_audit_user_log('User deleted', $entity->getEmail());
}

/**
 * Implements hook_user_login().
 */
function os2web_audit_user_user_login(UserInterface $account): void {
  os2web_audit_user_log('User logged in', $account->getEmail());
}

/**
 * Implements hook_user_logout().
 */
function os2web_audit_user_user_logout(AccountInterface $account): void {
  os2web_audit_user_log('User logged out', $account->getEmail());
}

/**
 * Simple logger wrapper.
 *
 * @param string $message
 *   Message to log.
 * @param string $mail
 *   Identify users by e-mail address.
 * @param array<string, string> $metadata
 *   Optional metadata to set.
 */
function os2web_audit_user_log(string $message, string $mail, array $metadata = []): void {
  /** @var \Drupal\os2web_audit\Service\Logger $logger */
  $logger = \Drupal::service('os2web_audit.logger');

  $metadata['userId'] = $mail;
  $logger->info('User', $message, FALSE, $metadata);
}
